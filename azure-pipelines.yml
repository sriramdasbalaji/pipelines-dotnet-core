# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

variables:
  buildConfiguration: 'Release'
stages:
- stage: Build
  jobs:
  - job: "PipelineLearningsBuild"

    pool:
     vmImage: 'vs2017-win2016'
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: 'pipelines-dotnet-core.csproj'
        arguments: '--configuration $(BuildConfiguration)'
        feedsToUse: 'select'
        versioningScheme: 'off'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        projects: 'pipelines-dotnet-core.csproj'
        arguments: '--configuration $(BuildConfiguration) --output $(Build.BinariesDirectory)'
        zipAfterPublish: false
        modifyOutputPath: false
        feedsToUse: 'select'
        versioningScheme: 'off'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)'
        includeRootFolder: true
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
    - task: UniversalPackages@0
      inputs:
        command: 'publish'
        feedsToUse: 'internal'
        publishDirectory: '$(Build.ArtifactStagingDirectory)'
        feedsToUsePublish: 'internal'
        vstsFeedPublish: 'multistageartifacts'
        vstsFeedPackagePublish: 'netcoreweb'
        versionOption: 'patch'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: "DevRelease"
  dependsOn: Build
  jobs:
  - job: "DevRelease"
    pool:
     vmImage: 'vs2017-win2016'
    steps:
    - task: UniversalPackages@0
      inputs:
        command: 'download'
        downloadDirectory: '$(System.DefaultWorkingDirectory)'
        feedsToUse: 'internal'
        vstsFeed: 'multistageartifacts'
        vstsFeedPackage: 'netcoreweb'
        vstsPackageVersion: '0.0.1'
        feedsToUsePublish: 'internal'
        versionOption: 'patch'
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Visual Studio Enterprise (5ae35b9e-9571-4a30-8426-62c1ba3394c4)'
        appType: 'webApp'
        WebAppName: 'PartsUnlimitedLD'
        packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
